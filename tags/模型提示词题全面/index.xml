<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>模型提示词题（全面） on 个人笔记博客</title>
        <link>https://yichixing.github.io/hugo-stack-dev/tags/%E6%A8%A1%E5%9E%8B%E6%8F%90%E7%A4%BA%E8%AF%8D%E9%A2%98%E5%85%A8%E9%9D%A2/</link>
        <description>Recent content in 模型提示词题（全面） on 个人笔记博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Mon, 28 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://yichixing.github.io/hugo-stack-dev/tags/%E6%A8%A1%E5%9E%8B%E6%8F%90%E7%A4%BA%E8%AF%8D%E9%A2%98%E5%85%A8%E9%9D%A2/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>模型测试题大全（AI超元领域版） </title>
        <link>https://yichixing.github.io/hugo-stack-dev/p/%E6%A8%A1%E5%9E%8B%E6%B5%8B%E8%AF%95%E9%A2%98%E5%A4%A7%E5%85%A8ai%E8%B6%85%E5%85%83%E9%A2%86%E5%9F%9F%E7%89%88/</link>
        <pubDate>Mon, 28 Apr 2025 00:00:00 +0000</pubDate>
        
        <guid>https://yichixing.github.io/hugo-stack-dev/p/%E6%A8%A1%E5%9E%8B%E6%B5%8B%E8%AF%95%E9%A2%98%E5%A4%A7%E5%85%A8ai%E8%B6%85%E5%85%83%E9%A2%86%E5%9F%9F%E7%89%88/</guid>
        <description>&lt;h1 id=&#34;题目&#34;&gt;题目：
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[[[[[[[模型测试]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;《《《编程能力 gemini2.5pro &amp;gt; qwen2.5max vs Claude-3.7-Sonnet》&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;【测试题目：想同时在GitHub Pages和Cloudflare Pages上部署Hugo博客，因此动态设置 baseUR】
&lt;ul&gt;
&lt;li&gt;《《能行的方案：分离构建，各自为政；既然问题根源在于“一次构建，两个不同 baseURL 的目标”，最清晰的解决方案就是让两个平台各自独立构建；简单来说就是github page和cloudflare page单独分别用main仓库源码部署》
&lt;ul&gt;
&lt;li&gt;《该方案可行的原因在于【cloudflare page真的有执行hugo源码的能力   cloudflare page能独立构建hugo项目得到hugo静态资源】，因此两个平台各自独立构建是成立的，让cloudflare page独立构建hugo项目得到hugo静态资源即可，然后github page也独立用action构建hugo项目得到hugo静态资源》&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&amp;lt;用该编程题一测就知道模型编程能力的优劣&amp;gt;
&lt;ul&gt;
&lt;li&gt;&amp;laquo;&amp;lt;【除了gemini2.5pro以外 ，其它模型都认为应该创建dev仓库的action代码 而且这个action还在run hugo -D】，这种说法是错误的，dev仓库都是从main仓库转换来的静态资源，因此dev仓库哪里来的源码让你执行hugo命令啊，能说出在dev仓库的action程序中执行run hugo -D 的全都是代码分析能力不行的，我把action源码给到这些模型，这些模型早就该分析出dev仓库都是静态资源，不可能在dev仓库执行aciton程序了&amp;gt;&lt;/li&gt;
&lt;li&gt;《《《另外有一个重要的认知就是【配置文件的参数的参数值仅在项目构建过程正被读取】，这意味着项目构建好后不会调用参数，比如 配置文件的baseURL必须在项目构建过程中把变量设置好，项目构建完成后再设置变量就没用了》&lt;/li&gt;
&lt;li&gt;《编程能力和推理能力一般的模型》&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;《《《测试结论：gemini2.5pro是唯一能成功解决我问题的模型，因此gemini2.5pro成为我能免费用到的最强模型，不但可以帮助我用视频学习，还有免费使用的平台Trae，编程能力还是免费用到中的最强》&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;lt;本地开源模型比较 千问QWQ vsGemma 3、千问QWQ视觉推理能力测试&amp;gt; &lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1LcdaYZEN2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.bilibili.com/video/BV1LcdaYZEN2/&lt;/a&gt;  &lt;a class=&#34;link&#34; href=&#34;https://aistudio.google.com/prompts/1wToupoSnKb31mh4-ZZ535NZNrK_7knrk&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://aistudio.google.com/prompts/1wToupoSnKb31mh4-ZZ535NZNrK_7knrk&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[1 千问QWQ vsGemma 3]
&lt;ul&gt;
&lt;li&gt;[1 推理能力肯定有思维链的千问QWQ强]
&lt;ul&gt;
&lt;li&gt;&amp;lt;内置了思维链的QWQ在推理时性能是远高于没有推理能力的模型的，使用更长的时间和更长的token输出来获取更高的性能&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[2 翻译能力]
&lt;ul&gt;
&lt;li&gt;&amp;lt;在使用推理能力下，内置了思维链的QWQ在花费思考时间的前提下能稍微领先gemma3，但翻译也很看重速度，不用思维链时gemma3胜，所以综合来看，翻译还是gemma3强&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[3 长文本总结能力]
&lt;ul&gt;
&lt;li&gt;&amp;lt;思维链对长上下文的总结也是有一定帮助的，还是QWQ强&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[4 角色扮演能力（文学能力）]
&lt;ul&gt;
&lt;li&gt;&amp;lt;gemma3在角色扮演这块很强，模型能完全理解提示词里面设置好的角色，由于gemma3的指令跟随能力更强，所以角色扮演也很容易跟随我们的引导进行变化&amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;QWQ的强大推理能力导致了逻辑性太强，表达会倾向于书面化，也就是AI味道太浓&amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;推理模型的特殊性也导致QWQ无法再长周期指令下保质指令性能，在多轮角色扮演后会表现出一些非常不理智的行为&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[5 编程能力]
&lt;ul&gt;
&lt;li&gt;《编程能力方面推普通模型不可能打得过推理模型，肯定是QWQ胜，当然时间消耗和上下文消耗只能自己取舍了，有思维链的QWQ在编程能力可是能解决R1的存在》&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[6 指令跟随能力]
&lt;ul&gt;
&lt;li&gt;[6.1 注意力测试]
&lt;ul&gt;
&lt;li&gt;&amp;lt;指令跟随能力检验的是 模型在多轮对话中理解和持续遵循复杂指令的能力，可以理解成上下文记忆和处理以及理解能力，其中最重要的当然是模型对上下文的记忆能力，因为推理分析太占用注意力了》&lt;/li&gt;
&lt;li&gt;《单次规则下，指令跟随能力方面 gemma3更强，推理模型无法在长周期指令下保质指令性能，因为推理模型注意力比不过普通模型，推理模型更容易因为随着对话次数的增加而导致注意力衰减，导致输出环节出现规则遗忘等“掉链子”情况》
&lt;ul&gt;
&lt;li&gt;《总结起来就是在使用推理模型的时候，一定要在提示词那里时刻提醒模型规则，否则推理模型把注意力都集中在了推理分析，容易遗忘规则的》&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;《《多轮对话弥补方案：每轮对话都提起规则，这种情况下就是QWQ更强，它只是注意力不集中在以前的规则，但只要规则在现在，推理模型就会把注意力分配到现在的规则，再凭借强大的推理能力去遵循规则》&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[[[6.2 复杂规则的遵循能力]
&lt;ul&gt;
&lt;li&gt;《《其实指令跟随能力更多的是要求模型按我的规则输出，也就是提示词里面的“同时满足所有这些要求，并且这个分析本身也要遵循上述所有规则”，输入的规则越多越复杂就越是考验模型的指令跟随能力；》&lt;/li&gt;
&lt;li&gt;《《复杂指令的遵循肯定推理模型强，推理模型只是多轮对话不行，因为多轮多话会导致模型注意力不集中；但单次输出的话，推理模型本身能把强逻辑和推理能力注意力集中在规则上，输出的格式肯定更准确&amp;gt;
&lt;ul&gt;
&lt;li&gt;&amp;lt;比如同样的例子和格式，gemin2.0无论怎么提醒它格式，它都无法输出正确的格式，但gemini2.5pro凭借它的推理能力能做到更容易做到以复杂的规则输出&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;《续，在指令跟随能力上 其实推理模型gemini2.5pro也不太行，对提示词又要求  比如给出了例子和格式还要我再把格式解释一遍，字体修改也是两次的提起，尤其是中文输出更是要重复提起  &lt;a class=&#34;link&#34; href=&#34;https://aistudio.google.com/prompts/17frt2TEoNuFHOBzK-lF4EDJmr-XYYCzD&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://aistudio.google.com/prompts/17frt2TEoNuFHOBzK-lF4EDJmr-XYYCzD&lt;/a&gt;》&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[2 推理模型vs基础语言模型]
&lt;ul&gt;
&lt;li&gt;[1 结论]
&lt;ul&gt;
&lt;li&gt;&amp;lt;推理模型和基础语音模型没有绝对的谁强谁弱，它们各有优劣，适用于不同的应用场景 &amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[2 推理模型虽然强大，但缺点不能视而不见]
&lt;ul&gt;
&lt;li&gt;&amp;laquo;1 推理模型不适合需要快速交互的场景，因为优异的性能，然而这种优势也伴随着显著的代价，及每一次提问都需要更额外的思考过程，甚至可能长达五分钟以上&amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;2 对于算力有限的本地电脑而言，这种额外的运算负担会直接导致输出速度显著地下降，无疑是一个不容忽视的缺点&amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;3 注意力机制问题导致指令跟随能力不强，角色扮演、多轮对话的场景容易出错，需要时刻提醒规则&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[3 gemma3的优点]
&lt;ul&gt;
&lt;li&gt;&amp;lt;1 综合性能强，除了编程以外几乎什么都做&amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;2 性能表现则展现出另一种优势，无需冗长的思考过程，响应迅速，能够更快速地交付结果，提升了使用效率&amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;3 指令跟随能力更强，适合多轮多话或晚角色扮演&amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;4 文学能力更强，不像推理模型因为逻辑性太强导致输出的文学AI味太浓&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[3 gemma3视觉推理能力测试]
&lt;ul&gt;
&lt;li&gt;[1 OCR能力]
&lt;ul&gt;
&lt;li&gt;&amp;lt;完美地将整个表格OCR， 带颜色的数据也能标注出来&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[2 复杂图像分析（比如折线图）]
&lt;ul&gt;
&lt;li&gt;&amp;lt;能对所有关键数据都进行提取，分析了表格的走向， 其对图表的分析还是非常到位的，分析的结论也是正确的&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[3 故事情节和故事逻辑理解能力]
&lt;ul&gt;
&lt;li&gt;&amp;lt;gemma3能理解多张图片的逻辑关系，能把多张图片拼接成一个连续的故事情节&amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;lt;比如给几张猫和老鼠的图片，gemma3把这几张图片拼接成一个连续的故事情节：Tom打字 -&amp;gt; Jerry拔插头 -&amp;gt; Tom触电&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[4 对复杂或抽象的构图的理解（比如视觉错位）]
&lt;ul&gt;
&lt;li&gt;&amp;lt;gemma3始终不是推理模型，肯定无法处理视觉元素的扭曲、错位、抽象表达&amp;gt;&lt;/li&gt;
&lt;li&gt;&amp;laquo;模型需要更深入的推理（例如，判断这些扭曲的元素是什么、它们代表什么意义）才能理解复杂构图，同时有推理能力和推理能力的千问2.5max应该会做得更好&amp;raquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;laquo;&amp;lt;GPT-4.1测试&amp;gt; &lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV14AdZYpEDk&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.bilibili.com/video/BV14AdZYpEDk&lt;/a&gt;   &lt;a class=&#34;link&#34; href=&#34;https://aistudio.google.com/prompts/1woqAsn54QZrpy8CoeyzMsiFfTMPg_u1B&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://aistudio.google.com/prompts/1woqAsn54QZrpy8CoeyzMsiFfTMPg_u1B&lt;/a&gt;   （获取测试题） &lt;a class=&#34;link&#34; href=&#34;https://aistudio.google.com/prompts/1woqAsn54QZrpy8CoeyzMsiFfTMPg_u1B&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://aistudio.google.com/prompts/1woqAsn54QZrpy8CoeyzMsiFfTMPg_u1B&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[gpt4.1模型能力测试《《《可以要提示词 这些提示词用来测试模型的能力很好》]
&lt;ul&gt;
&lt;li&gt;[1 幻觉识别能力]
&lt;ul&gt;
&lt;li&gt;&amp;lt;对于虚构的人物、历史事件、地理位置识别较好，不易产生幻觉；但对于虚构的科学理论、技术、化学物质等容易产生幻觉，会一本正经地编造信息。&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[2 指令遵循能力]
&lt;ul&gt;
&lt;li&gt;&amp;lt;基本能遵循复杂的多重指令，比如用【测试模型是否能遵循指令的复杂指令测试的提示词】测试，输出结果成功实现 包括否定性约束（如禁用特定字母）和格式要求（如JSON），能力较之前版本有显著提升，但在细节处理上（如 答案标签 格式）可能存在小瑕疵。&amp;gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://aistudio.google.com/prompts/1KyZa9d9Vd3D4dItzp3wgkDRe6frLgT5C&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://aistudio.google.com/prompts/1KyZa9d9Vd3D4dItzp3wgkDRe6frLgT5C&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[3 逻辑推理能力]
&lt;ul&gt;
&lt;li&gt;&amp;lt;在解决增加了复杂约束条件的农夫过河问题时失败，第一步即出错，表明其在复杂逻辑推理方面仍有不足。&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[4 模式识别能力]
&lt;ul&gt;
&lt;li&gt;&amp;lt;使用【找规律测试（序列推理测试）的提示词】中，gpt4.1未能识别基于字母的序列规律，但成功识别了两种不同的数字序列规律（交替模式和二进制模式）。&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[5 编程能力]
&lt;ul&gt;
&lt;li&gt;&amp;lt;编程能力强大，尤其在SwiftUI和前端（HTML/Tailwind CSS）方面表现出色，能生成复杂且有效的代码和界面；但在Three.js可视化方面生成的代码未能成功渲染；通过Cline插件也能完成较复杂的macOS应用开发（如水印应用），但可能需要错误修复环节。&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;[6 API调用成本]
&lt;ul&gt;
&lt;li&gt;&amp;lt;API调用成本尚可，完成较复杂的macOS应用开发（如水印应用）消耗了约 $0.56 的 API 调用费用，对于这样一个相对复杂的项目来说，成本尚可接受&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
