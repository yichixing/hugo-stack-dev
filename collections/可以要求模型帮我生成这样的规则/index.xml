<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>可以要求模型帮我生成这样的规则 on 个人笔记博客</title>
        <link>https://yichixing.github.io/hugo-stack-dev/collections/%E5%8F%AF%E4%BB%A5%E8%A6%81%E6%B1%82%E6%A8%A1%E5%9E%8B%E5%B8%AE%E6%88%91%E7%94%9F%E6%88%90%E8%BF%99%E6%A0%B7%E7%9A%84%E8%A7%84%E5%88%99/</link>
        <description>Recent content in 可以要求模型帮我生成这样的规则 on 个人笔记博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Tue, 28 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://yichixing.github.io/hugo-stack-dev/collections/%E5%8F%AF%E4%BB%A5%E8%A6%81%E6%B1%82%E6%A8%A1%E5%9E%8B%E5%B8%AE%E6%88%91%E7%94%9F%E6%88%90%E8%BF%99%E6%A0%B7%E7%9A%84%E8%A7%84%E5%88%99/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>生成什么样的规则有点用</title>
        <link>https://yichixing.github.io/hugo-stack-dev/p/%E7%94%9F%E6%88%90%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E8%A7%84%E5%88%99%E6%9C%89%E7%82%B9%E7%94%A8/</link>
        <pubDate>Tue, 28 Jan 2025 00:00:00 +0000</pubDate>
        
        <guid>https://yichixing.github.io/hugo-stack-dev/p/%E7%94%9F%E6%88%90%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E8%A7%84%E5%88%99%E6%9C%89%E7%82%B9%E7%94%A8/</guid>
        <description>&lt;p&gt;༼ ༽
【规则（从cursor一键生成的规则文件中了解到了 规则这个系统提示词） &lt;a class=&#34;link&#34; href=&#34;https://aistudio.google.com/prompts/1RttnSD3EpA0wXkzaz9uGrsp8V-vFvgDT&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://aistudio.google.com/prompts/1RttnSD3EpA0wXkzaz9uGrsp8V-vFvgDT&lt;/a&gt;】
[0 生成规则即便靠现成的完整项目]
《AI 生成规则的过程，不仅仅是为了让 AI 自己 后续能理解，也是一个帮助开发者（包括新手）梳理和理解项目的过程。生成的规则文件本身就是一种结构化的项目文档》
[1 什么是规则]
《规则就是输出规则，是AI理解和遵循的项目“说明书”和“行为准则”，AI会主动参考这些规则来约束和指导自己的输出，可以将规则理解为更结构化、更持久化、更具项目针对性的“系统提示”或“背景知识文档”,》&amp;gt;
[2 创建规则 (core.mdc) ]
&amp;lt;用法：定义Plan/Act 模式，把该规则投喂给AI后，就能指示AI在处理复杂任务时，先输出规划步骤（Plan），待你确认或修改后，再通过特定指令（如输入 ACT）触发它执行具体的代码生成（Act），就是AI客户端的chat模式和build模式&amp;gt;
[3 项目结构规则 (project-structure.mdc, file-structure.mdc)]
&amp;lt;用法：让AI创建新文件、重构代码或添加新功能时，AI会参考这些规则，确保新生成的文件被放置在项目约定的正确位置，并遵循推荐的命名方式&amp;gt;
[4 页面结构规则 (page-structure.mdc)]
&amp;lt;用法：当AI需要生成或修改某个页面时，它会依据此规则来组织页面的HTML结构或组件嵌套，确保页面符合既定的设计和布局规范&amp;gt;
[5 样式规则 (styles.mdc)]
&amp;lt;用法：在生成UI组件或修改样式时，会遵循这些规则来编写CSS或使用预定义的样式类/变量，从而保证整个项目的视觉风格一致性。这可以避免AI随意添加样式或使用不符合规范的写法&amp;gt;
[6 UI组件规则 (ui-components.mdc)]
&amp;lt;用法： AI在构建界面时，会知道可以使用哪些现成的组件，以及如何正确地使用它们&amp;gt;
[7 项目状态规则 (project-status.mdc)、主索引文件 (index.mdc)]
《用法：这更像是一个供AI和开发者参考的项目日志或看板。AI可以读取它来了解项目当前状态&amp;gt;
[8 项目概述规则 (project-overview.mdc)]
《用法：给AI一个关于项目的基础背景和整体印象，帮助AI在处理更广泛或战略性的问题时，能更好地理解上下文》
[9 测试规则 (testing.mdc)]
&amp;lt;用法：当你要求AI为某个功能编写测试时，AI会按照这些规则来生成测试代码，确保测试符合项目的整体标准和实践&amp;gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
