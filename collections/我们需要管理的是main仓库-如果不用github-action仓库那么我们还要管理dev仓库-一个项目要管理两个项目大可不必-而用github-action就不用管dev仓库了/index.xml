<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>我们需要管理的是main仓库 如果不用github Action仓库那么我们还要管理dev仓库 一个项目要管理两个项目大可不必 ，而用github Action就不用管dev仓库了 on 个人笔记博客</title>
        <link>https://yichixing.github.io/hugo-stack-dev/collections/%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E7%AE%A1%E7%90%86%E7%9A%84%E6%98%AFmain%E4%BB%93%E5%BA%93-%E5%A6%82%E6%9E%9C%E4%B8%8D%E7%94%A8github-action%E4%BB%93%E5%BA%93%E9%82%A3%E4%B9%88%E6%88%91%E4%BB%AC%E8%BF%98%E8%A6%81%E7%AE%A1%E7%90%86dev%E4%BB%93%E5%BA%93-%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E8%A6%81%E7%AE%A1%E7%90%86%E4%B8%A4%E4%B8%AA%E9%A1%B9%E7%9B%AE%E5%A4%A7%E5%8F%AF%E4%B8%8D%E5%BF%85-%E8%80%8C%E7%94%A8github-action%E5%B0%B1%E4%B8%8D%E7%94%A8%E7%AE%A1dev%E4%BB%93%E5%BA%93%E4%BA%86/</link>
        <description>Recent content in 我们需要管理的是main仓库 如果不用github Action仓库那么我们还要管理dev仓库 一个项目要管理两个项目大可不必 ，而用github Action就不用管dev仓库了 on 个人笔记博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Mon, 20 Feb 2023 20:14:22 +0800</lastBuildDate><atom:link href="https://yichixing.github.io/hugo-stack-dev/collections/%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E7%AE%A1%E7%90%86%E7%9A%84%E6%98%AFmain%E4%BB%93%E5%BA%93-%E5%A6%82%E6%9E%9C%E4%B8%8D%E7%94%A8github-action%E4%BB%93%E5%BA%93%E9%82%A3%E4%B9%88%E6%88%91%E4%BB%AC%E8%BF%98%E8%A6%81%E7%AE%A1%E7%90%86dev%E4%BB%93%E5%BA%93-%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E8%A6%81%E7%AE%A1%E7%90%86%E4%B8%A4%E4%B8%AA%E9%A1%B9%E7%9B%AE%E5%A4%A7%E5%8F%AF%E4%B8%8D%E5%BF%85-%E8%80%8C%E7%94%A8github-action%E5%B0%B1%E4%B8%8D%E7%94%A8%E7%AE%A1dev%E4%BB%93%E5%BA%93%E4%BA%86/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>github action：4 用github action把源码仓库部署项目到github page仓库的真正意义</title>
        <link>https://yichixing.github.io/hugo-stack-dev/p/github-action4-%E7%94%A8github-action%E6%8A%8A%E6%BA%90%E7%A0%81%E4%BB%93%E5%BA%93%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E5%88%B0github-page%E4%BB%93%E5%BA%93%E7%9A%84%E7%9C%9F%E6%AD%A3%E6%84%8F%E4%B9%89/</link>
        <pubDate>Mon, 20 Feb 2023 20:14:22 +0800</pubDate>
        
        <guid>https://yichixing.github.io/hugo-stack-dev/p/github-action4-%E7%94%A8github-action%E6%8A%8A%E6%BA%90%E7%A0%81%E4%BB%93%E5%BA%93%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE%E5%88%B0github-page%E4%BB%93%E5%BA%93%E7%9A%84%E7%9C%9F%E6%AD%A3%E6%84%8F%E4%B9%89/</guid>
        <description>&lt;p&gt;(00:09-00:32) &lt;em&gt;&lt;strong&gt;1.2: 手动部署痛点与自动化优势&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;♈指出传统方式下，每次修改完文件后，都需要&lt;strong&gt;手动将生成&lt;/strong&gt;的 &lt;code&gt;public&lt;/code&gt; 文件夹&lt;strong&gt;上传&lt;/strong&gt;到服务器或托管平台，这个过程比较&lt;strong&gt;麻烦&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;♈使用 &lt;strong&gt;GitHub Actions&lt;/strong&gt; 可以实现&lt;strong&gt;自动化&lt;/strong&gt;：&lt;strong&gt;自动&lt;/strong&gt;帮我们&lt;strong&gt;生成&lt;/strong&gt; &lt;code&gt;public&lt;/code&gt; 目录，并将其&lt;strong&gt;部署&lt;/strong&gt;到&lt;strong&gt;静态页面网站&lt;/strong&gt;（如 GitHub Pages）。&lt;/li&gt;
&lt;li&gt;♈&lt;strong&gt;优点&lt;/strong&gt;：只需&lt;strong&gt;提交代码&lt;/strong&gt; (&lt;code&gt;git push&lt;/code&gt;)，后续的&lt;strong&gt;构建&lt;/strong&gt;和&lt;strong&gt;部署&lt;/strong&gt;过程就能&lt;strong&gt;自动完成&lt;/strong&gt;，&lt;strong&gt;方便&lt;/strong&gt;很多。x x &amp;lt;-https://aistudio.google.com/prompts/1dv1SBgRsYgFBSgYe1Dseg0dyYouTZ3_P
&lt;ul&gt;
&lt;li&gt;《《《♐可以源码仓库和静态资源仓库分开；因为源码仓库很重要，每次项目回溯时回溯源码仓库的代码才有意义，回溯静态资源仓库的代码没意义，这意味着未来版本控制就必须要push推送源码仓库，♓但要推送源码仓库就意味着每次推送都要同时push推送源码仓库和静态资源仓库，手动维护两个独立的 Git，需再手动进行第二次推送 流程退冗余了；♐而有了action部署静态资源后，每次只需要推送最重要的源码仓库，无需做冗余的推送静态资源仓库的步骤，无需再手动进行第二次推送&amp;gt;&lt;/li&gt;
&lt;li&gt;《♓我觉得最主要作用是源码静态资源仓库和源代码仓库分开；♐其实不要action也行，不要action就不去推送源代码仓库了，在本地只推送public静态资源即可，反正都是推送步骤不会减少&lt;/li&gt;
&lt;li&gt;《《♐用action把部署静态资源到github page的真正价值：多人协作，多人协作时，需要所有人都遵循同样的流程，但很是有人知道我们要推送的是public静态资源，不是源码，这就导致源码把静态资源给污染了（目录混入源代码仓库会极大地污染 Git 历史）》&lt;/li&gt;
&lt;li&gt;&amp;lt;设置好 Action 后，你甚至可以通过 GitHub 网页界面直接编辑 Markdown 文件并提交，Action 照样能完成部署，你此时甚至不需要本地安装 Hugo；因此未来你更换了本地开发机器，构建环境都是一致的，每次 Action 运行时，都是用同一个版本、同一种配置的 Hugo 工具在同一种操作系统环境下进行构建，结果更可控&amp;gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
